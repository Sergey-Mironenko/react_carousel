{"version":3,"sources":["components/Carousel.tsx","components/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","scrollPosition","animationDuration","moveLeft","moveRight","className","style","width","transform","transition","map","image","index","src","alt","String","type","onClick","Form","state","value","props","isError","this","changeNumber","range","text","onSubmit","event","preventDefault","setState","onInput","a","target","replace","disabled","React","Component","App","step","length","currentPosition","number","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b79bbcfd.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  scrollPosition: number,\n  animationDuration: number,\n  moveLeft(): void,\n  moveRight(): void,\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  scrollPosition,\n  animationDuration,\n  moveLeft,\n  moveRight,\n}) => (\n  <div className=\"Carousel\">\n    <div\n      className=\"Carousel__container\"\n      style={{ width: `${frameSize * itemWidth}px` }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{ transform: `translate(${scrollPosition}px, 0)`, transition: `transform ${animationDuration}ms` }}\n      >\n        {images.map((image, index) => (\n          <li key={image}>\n            <img\n              src={image}\n              alt={`Img ${index}`}\n              width={String(itemWidth)}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n\n    <div\n      className=\"Carousel__button-container\"\n      style={{ width: `${frameSize * itemWidth}px` }}\n    >\n      <button\n        className=\"Carousel__button\"\n        type=\"button\"\n        data-cy=\"prev\"\n        onClick={moveLeft}\n      >\n        Prev\n      </button>\n      <button\n        className=\"Carousel__button\"\n        type=\"button\"\n        data-cy=\"next\"\n        onClick={moveRight}\n      >\n        Next\n      </button>\n    </div>\n  </div>\n);\n\nexport default Carousel;\n","import React, { ChangeEvent } from 'react';\nimport './Form.scss';\n\ntype State = {\n  value: string;\n  isError: boolean;\n};\n\ntype Props = {\n  changeNumber(number: string): void,\n  range:(number: number) => boolean,\n  text: string,\n  value: string;\n};\n\nclass Form extends React.Component<Props, State> {\n  state = {\n    value: this.props.value,\n    isError: false,\n  };\n\n  render() {\n    const {\n      changeNumber,\n      range,\n      text,\n    } = this.props;\n    const {\n      value,\n      isError,\n    } = this.state;\n\n    const handleSubmit = (event: React.SyntheticEvent) => {\n      event.preventDefault();\n\n      if (range(+value)) {\n        changeNumber(value);\n      } else {\n        this.setState({ isError: true });\n      }\n    };\n\n    const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n      const a = event.target.value;\n\n      this.setState(\n        {\n          value: a.replace(/\\D/g, ''),\n          isError: false,\n        },\n      );\n    };\n\n    return (\n      <form\n        className=\"Form\"\n        onSubmit={handleSubmit}\n      >\n\n        <input\n          className=\"Form__input\"\n          type=\"text\"\n          value={value}\n          onInput={handleInput}\n        />\n        <button\n          className=\"Form__button\"\n          type=\"submit\"\n          disabled={!value}\n        >\n          {text}\n        </button>\n        {isError && (\n          <p className=\"Form__error\">\n            Out of range!\n          </p>\n        )}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport Form from './components/Form';\n\ninterface State {\n  images: string[];\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  scrollPosition: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    scrollPosition: 0,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      scrollPosition,\n      animationDuration,\n    } = this.state;\n\n    const moveRight = () => {\n      if ((frameSize * itemWidth) - scrollPosition\n        < (itemWidth * images.length)) {\n        this.setState(() => {\n          const currentPosition = scrollPosition - (itemWidth * step);\n\n          if (currentPosition - (itemWidth * step)\n            <= -(images.length * itemWidth)) {\n            return {\n              scrollPosition: -(images.length * itemWidth)\n              + (frameSize * itemWidth),\n            };\n          }\n\n          return { scrollPosition: currentPosition };\n        });\n      }\n    };\n\n    const moveLeft = () => {\n      if (scrollPosition < 0) {\n        this.setState(() => {\n          if (scrollPosition + (itemWidth * step) > 0) {\n            return { scrollPosition: 0 };\n          }\n\n          return { scrollPosition: scrollPosition + (itemWidth * step) };\n        });\n      }\n    };\n\n    const changeItemWidth = (number: string) => {\n      this.setState((prevState) => ({\n        itemWidth: +number,\n        scrollPosition: (prevState.scrollPosition\n          / prevState.itemWidth) * +number,\n      }));\n    };\n\n    const changeFrameSize = (number: string) => {\n      this.setState((prevState) => {\n        if (scrollPosition - (itemWidth * +number)\n          <= -(images.length * itemWidth)) {\n          return {\n            scrollPosition: -(images.length * itemWidth)\n            + (+number * itemWidth),\n            frameSize: +number,\n          };\n        }\n\n        return {\n          scrollPosition: prevState.scrollPosition,\n          frameSize: +number,\n        };\n      });\n    };\n\n    const changeStep = (number: string) => {\n      this.setState({ step: +number });\n    };\n\n    const changeAnimationDuration = (number: string) => {\n      this.setState({ animationDuration: +number });\n    };\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          scrollPosition={scrollPosition}\n          animationDuration={animationDuration}\n          moveLeft={moveLeft}\n          moveRight={moveRight}\n        />\n\n        <Form\n          changeNumber={changeItemWidth}\n          range={(number: number) => {\n            return number >= 50 && number <= 500;\n          }}\n          text=\"Enter item width 50 - 500\"\n          value={String(itemWidth)}\n        />\n\n        <Form\n          changeNumber={changeFrameSize}\n          range={(number: number) => {\n            return number >= 1 && number <= images.length;\n          }}\n          text={`Enter frame size 1 - ${images.length}`}\n          value={String(frameSize)}\n        />\n\n        <Form\n          changeNumber={changeStep}\n          range={(number: number) => {\n            return number >= 1 && number <= images.length;\n          }}\n          text={`Enter step 1 - ${images.length}`}\n          value={String(step)}\n        />\n\n        <Form\n          changeNumber={changeAnimationDuration}\n          range={(number: number) => {\n            return number >= 1000 && number <= 3000;\n          }}\n          text=\"Enter duaration 1000 - 3000\"\n          value={String(animationDuration)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}