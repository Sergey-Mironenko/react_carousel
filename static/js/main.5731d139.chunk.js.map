{"version":3,"sources":["components/Carousel.tsx","components/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","scrollPosition","animationDuration","moveLeft","moveRight","className","style","width","transform","transition","map","image","index","src","alt","height","type","onClick","Form","state","value","isError","this","props","changeNumber","range","placeholder","text","onSubmit","event","preventDefault","setState","trim","onChange","target","disabled","React","Component","App","step","length","currentPosition","number","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5731d139.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  scrollPosition: number,\n  animationDuration: number,\n  moveLeft(): void,\n  moveRight(): void,\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  scrollPosition,\n  animationDuration,\n  moveLeft,\n  moveRight,\n}) => (\n  <div className=\"Carousel\">\n    <div\n      className=\"Carousel__container\"\n      style={{ width: `${frameSize * itemWidth}px` }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{ transform: `translate(${scrollPosition}px, 0)`, transition: `transform ${animationDuration}ms` }}\n      >\n        {images.map((image, index) => (\n          <li key={image}>\n            <img\n              src={`${image}`}\n              alt={`${index}`}\n              style={{ width: `${itemWidth}px`, height: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n\n    <div\n      className=\"Carousel__button-container\"\n      style={{ width: `${frameSize * itemWidth}px` }}\n    >\n      <button\n        className=\"Carousel__button\"\n        type=\"button\"\n        data-cy=\"prev\"\n        onClick={moveLeft}\n      >\n        Prev\n      </button>\n      <button\n        className=\"Carousel__button\"\n        type=\"button\"\n        data-cy=\"next\"\n        onClick={moveRight}\n      >\n        Next\n      </button>\n    </div>\n  </div>\n);\n\nexport default Carousel;\n","import React from 'react';\nimport './Form.scss';\n\ntype State = {\n  value: string;\n  isError: boolean;\n};\n\ntype Props = {\n  changeNumber(number: string): void,\n  range:(number: number) => boolean,\n  placeholder: string,\n  text: string,\n};\n\nclass Form extends React.Component<Props, State> {\n  state = {\n    value: '',\n    isError: false,\n  };\n\n  render() {\n    const {\n      changeNumber,\n      range,\n      placeholder,\n      text,\n    } = this.props;\n    const {\n      value,\n      isError,\n    } = this.state;\n\n    return (\n      <form\n        className=\"Form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          if (range(+value)) {\n            changeNumber(value);\n            this.setState({ value: '' });\n          } else {\n            this.setState({ isError: true });\n          }\n        }}\n      >\n\n        <input\n          className=\"Form__input\"\n          type=\"number\"\n          placeholder={placeholder}\n          value={value.trim()}\n          onChange={event => {\n            this.setState(\n              {\n                value: event.target.value,\n                isError: false,\n              },\n            );\n          }}\n        />\n        <button\n          className=\"Form__button\"\n          type=\"submit\"\n          disabled={!value}\n        >\n          {text}\n        </button>\n        {isError && (\n          <p className=\"Form__error\">\n            Out of range!\n          </p>\n        )}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport Form from './components/Form';\n\ninterface State {\n  images: string[];\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  scrollPosition: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    scrollPosition: 0,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      scrollPosition,\n    } = this.state;\n\n    const moveRight = () => {\n      if ((frameSize * itemWidth) - scrollPosition\n        < (itemWidth * images.length)) {\n        this.setState(() => {\n          const currentPosition = scrollPosition - (itemWidth * step);\n\n          if (currentPosition - (itemWidth * step)\n            <= -(images.length * itemWidth)) {\n            return {\n              scrollPosition: -(images.length * itemWidth)\n              + (frameSize * itemWidth),\n            };\n          }\n\n          return { scrollPosition: currentPosition };\n        });\n      }\n    };\n\n    const moveLeft = () => {\n      if (scrollPosition < 0) {\n        this.setState(() => {\n          if (scrollPosition + (itemWidth * step) > 0) {\n            return { scrollPosition: 0 };\n          }\n\n          return { scrollPosition: scrollPosition + (itemWidth * step) };\n        });\n      }\n    };\n\n    const changeItemWidth = (number: string) => {\n      this.setState((prevState) => ({\n        itemWidth: +number,\n        scrollPosition: (prevState.scrollPosition\n          / prevState.itemWidth) * +number,\n      }));\n    };\n\n    const changeFrameSize = (number: string) => {\n      this.setState((prevState) => {\n        if (scrollPosition - (itemWidth * +number)\n          <= -(images.length * itemWidth)) {\n          return {\n            scrollPosition: -(images.length * itemWidth)\n            + (+number * itemWidth),\n            frameSize: +number,\n          };\n        }\n\n        return {\n          scrollPosition: prevState.scrollPosition,\n          frameSize: +number,\n        };\n      });\n    };\n\n    const changeStep = (number: string) => {\n      this.setState({ step: +number });\n    };\n\n    const changeAnimationDuration = (number: string) => {\n      this.setState({ animationDuration: +number });\n    };\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n          itemWidth={this.state.itemWidth}\n          frameSize={this.state.frameSize}\n          scrollPosition={this.state.scrollPosition}\n          animationDuration={this.state.animationDuration}\n          moveLeft={moveLeft}\n          moveRight={moveRight}\n        />\n\n        <Form\n          changeNumber={changeItemWidth}\n          range={(number: number) => {\n            return number >= 50 && number <= 500;\n          }}\n          placeholder=\"50 - 500\"\n          text=\"Enter item width\"\n        />\n\n        <Form\n          changeNumber={changeFrameSize}\n          range={(number: number) => {\n            return number >= 1 && number <= images.length;\n          }}\n          placeholder={`1 - ${images.length}`}\n          text=\"Enter frame size\"\n        />\n\n        <Form\n          changeNumber={changeStep}\n          range={(number: number) => {\n            return number >= 1 && number <= images.length;\n          }}\n          placeholder={`1 - ${images.length}`}\n          text=\"Enter step\"\n        />\n\n        <Form\n          changeNumber={changeAnimationDuration}\n          range={(number: number) => {\n            return number >= 1000 && number <= 3000;\n          }}\n          placeholder=\"1000 - 3000\"\n          text=\"Enter duaration\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}